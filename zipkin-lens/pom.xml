<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015-2020 The OpenZipkin Authors

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
    in compliance with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License
    is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied. See the License for the specific language governing permissions and limitations under
    the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.zipkin</groupId>
    <artifactId>zipkin-parent</artifactId>
    <version>2.21.2-SNAPSHOT</version>
  </parent>

  <artifactId>zipkin-lens</artifactId>
  <name>Zipkin Lens</name>
  <description>Repackages Zipkin Lens into a jar so we can use it in Spring Boot</description>

  <properties>
    <main.basedir>${project.basedir}/..</main.basedir>
    <frontend-maven-plugin.version>1.9.1</frontend-maven-plugin.version>
    <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
  </properties>

  <dependencies>
    <!-- no dependencies as this is just javascript -->
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
        <executions>
          <execution>
            <id>remove existing output</id>
            <phase>compile</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
              <excludeDefaultDirectories>true</excludeDefaultDirectories>
              <filesets>
                <fileset>
                  <directory>target/classes/zipkin-lens</directory>
                </fileset>
              </filesets>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${frontend-maven-plugin.version}</version>
        <configuration>
          <installDirectory>target</installDirectory>
          <nodeVersion>v12.16.2</nodeVersion>
          <yarnVersion>v1.22.4</yarnVersion>
          <environmentVariables>
            <!--
            create-react-app runs tests in watch mode unless this is defined. We define it here for running Maven locally.
            -->
            <CI>true</CI>
          </environmentVariables>
        </configuration>
        <executions>
          <execution>
            <id>install node and yarn</id>
            <goals>
              <goal>install-node-and-yarn</goal>
            </goals>
          </execution>
          <execution>
            <id>yarn install</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn lint</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <arguments>run lint</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn run build</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn run test</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <arguments>run test</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
